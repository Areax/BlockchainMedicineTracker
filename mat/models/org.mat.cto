namespace org.mat

//Address concept for locations
concept Address 
{
  o String city
  o String country
  o String street
  o String street2 optional
  o String state optional
  o String zip
}

//Status of shipment and order
enum Status 
{
  o IN_TRANSIT
  o ARRIVED
  o CANCELLED
  o WAITING_CONFIRMATION
  o CONFIRMED
}

//Business type
enum BusinessType
{
  o Manufacturer
  o Carrier
  o Distributor
}

//Employee type
enum EmployeeType
{
  o Admin
  o Regular
}

//Unit of Measure for ItemType
enum UoM 
{
  o mL
  o g
}

asset ItemType identified by itemTypeName 
{
  o String itemTypeName
}

asset Item identified by itemId
{
  o String itemId
  o UoM itemTypeUoM
  o Double amountOfMedication
  --> Business currentOwner
  --> ItemType itemType
}

concept Shipment
{
  o Status status
  o Address destinationAddress
  o Address sourceAddress
  --> Business currentOwner
  --> Business carryingBusiness
  --> Item[] items
}

concept ItemRequest 
{
  o String itemRequestId
  --> Item requestedItem
  o Double unitPrice
  o Integer quantity
}

asset Contract identified by contractId 
{
  o String contractId
  o Status status
  o DateTime arrivalDateTime
  o Shipment[] shipments optional
  o ItemRequest[] requestedItems
  --> Business sellingBusiness
  --> Business buyingBusiness
}

asset User identified by userEmail 
{
  o String userEmail
  o String password
  o String employeeId
}

participant LogInChecker identified by LogInCheckerId
{
  o String LogInCheckerId
}

asset Business identified by businessId 
{
  o String businessId
  o String name
  o BusinessType businessType
  o String PoCName optional
  o String PoCEmail optional
  o Address address optional
  o Double accountBalance
  --> Item[] inventory optional
  --> Employee[] employees optional
}

participant Employee identified by employeeId
{
  o String employeeId
  o String firstName
  o String lastName
  o String email
  o EmployeeType employeeType
  o String phoneNumber optional
  --> Business worksFor
}

//Item Transaction to allow the owner of the item to be changed
transaction ItemTransaction
{
  o Integer itemTransactionId
  --> Business newOwner
  --> Item item
}

//Shipment Transaction to allow the owner of a shipment to to be changed
transaction ShipmentTransaction
{
  o Integer shipmentTransactionId
  o Shipment shipment
  --> Business newOwner
}

//call to bulk load invenotory in
transaction BulkLoad
{
  o Integer medicineNumber
  o String medicineName
  o String unitOfMeasure
  o Integer medicineQuantity
  o Business owner
  o String medicineLocation 

}

//Creates a contract
transaction CreateContract
{
}

//Updates an already created contract
transaction UpdateContract
{
}

//Delete an already deleted contract
transaction DeleteContract
{
}

//Creates a shipment
transaction CreateShipment
{
}

//Updates an already created shipment
transaction UpdateShipment
{
}

//Delete an already deleted shipment
transaction DeleteShipment
{
}

/**
 * JUST FOR INITIALIZING A DEMO
 */
transaction SetupDemo 
{
}
